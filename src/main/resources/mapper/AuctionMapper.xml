<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="com.dtbid.dropthebid.auction.repository.AuctionRepository">
	<insert id="insertAuction">
		INSERT INTO auction(auction_id, member_id, category_id, auction_status_id, auction_product_status_id, item_name, description, 
		location, start_price, start_date, due_date, created_at, updated_at) VALUES (
		auction_seq.NEXTVAL, #{memberId}, #{categoryId}, #{auctionStatusId}, #{auctionProductStatusId}, #{itemName}, #{description},
		#{location}, #{startPrice}, #{startDate}, #{dueDate}, SYSDATE, SYSDATE)
		
		<selectKey keyProperty="auctionId" resultType="int" order="AFTER">
			select auction_seq.CURRVAL FROM DUAL
		</selectKey>
	</insert>
	
	<insert id="insertAuctionImage">
		INSERT INTO auction_image(auction_id, url, extension, main_image, image_size) VALUES (
		#{auctionId},#{url}, #{extension}, #{mainImage}, #{imageSize})
	</insert>
	
	<update id="updateAuction">
			UPDATE auction
	    <set>
	        <if test="itemName != null">
	            item_name = #{itemName},
	        </if>
	        <if test="categoryId != 0">
	            category_id = #{categoryId},
	        </if>
	        <if test="auctionProductStatusId != 0">
	            auction_product_status_id = #{auctionProductStatusId},
	        </if>
	        <if test="location != null">
	            location = #{location},
	        </if>
	        <if test="startPrice != 0">
	            start_price = #{startPrice},
	        </if>
	        <if test="startDate != null">
	            start_date = #{startDate},
	        </if>
	        <if test="dueDate != null">
	            due_date = #{dueDate},
	        </if>
	        <if test="description != null">
	            description = #{description},
	        </if>
	        updated_at = SYSDATE
	    </set>
	    WHERE auction_id = #{auctionId}
	</update>
	
	<delete id="deleteAuctionImage">
		delete from auction_image
		where url=#{url}
	</delete>
	
	<select id="getAuction" resultType="AuctionDto">
		SELECT 
	        a.*,
	        c.category_name AS category_name,
	        ps.status_name AS auction_product_status_name,
	        s.auction_status_name AS auction_status_name
	    FROM 
	        auction a
	    JOIN 
	        category c 
	    ON 
	        a.category_id = c.category_id
	    JOIN 
	        auction_product_status ps
	    ON 
	        a.auction_product_status_id = ps.auction_product_status_id
	    JOIN 
	        auction_status s
	    ON 
	        a.auction_status_id = s.auction_status_id
	    WHERE 
	        a.auction_id = #{auctionId}
	</select>
	
	<select id="getAuctionImages" resultType="Image">
		select AUCTION_IMAGE_ID, AUCTION_ID, URL, EXTENSION, MAIN_IMAGE
		from auction_image
		where auction_id=#{auctionId}
		order by main_image desc, auction_image_id
	</select>

	<insert id="insertBidding" parameterType="map">
		insert into bidding(MEMBER_ID, AUCTION_ID, PRICE, TIME) values (
		(SELECT MEMBER_ID FROM member WHERE EMAIL = #{memberEmail}),
	    #{auctionId},
	    #{price},
	   SYSDATE)
	</insert>
	
	<select id="getHighestBidding" resultType="BiddingDto">
	    SELECT *
	    FROM (
	        SELECT *
	        FROM bidding
	        WHERE AUCTION_ID = #{auctionId}
	        ORDER BY PRICE DESC
	    )
	    WHERE ROWNUM = 1
	</select>
	
	<select id="getBiddings" parameterType="int" resultType="BiddingDto">
		SELECT
	        b.bid_id AS bid_id,
	        b.member_id AS member_id,
	        m.email AS member_email,
	        b.price AS price,
	        b.time AS time
	    FROM
	        bidding b
	    JOIN
	        member m
	    ON
	        b.member_id = m.member_id
	    WHERE
	        b.auction_id = #{auctionId}
	    ORDER BY
	        b.price DESC
	</select>
	
	<select id="getAll">
		select *
		from auction
	</select>
	
	<update id="updateAuctionStatus">
		update auction
		set auction_status_id = #{auctionStatusId}
		where auction_id = #{auctionId}
	</update>
	
	<insert id="insertBidingSuccess">
		insert into bidding_success(bid_id) values (#{bidId})
	</insert>
</mapper>